[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"const RoleExample = () => {\r\n  return (\r\n    <div>\r\n      <a href=\"/\">Link</a>\r\n      <button>button</button>\r\n      <footer>content info</footer>\r\n      <h1>heading</h1>\r\n      <header>banner</header>\r\n      <img src=\"\" alt=\"description\" /> Img\r\n      <input type=\"checkbox\" /> Checkbox\r\n      <input type=\"number\" /> Spinbutton\r\n      <input type=\"radio\" /> Radio\r\n      <input type=\"text\" /> Textbox\r\n      <li>list item</li>\r\n      <ul>list group</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nrender(<RoleExample/>)","type":"code","id":"69nbk"},{"content":"\r\n\r\ntest(\"can find element by role\", async () => {\r\n  // render the component\r\n  render(<RoleExample />);\r\n  const roles = [\r\n    \"link\",\r\n    \"button\",\r\n    \"contentinfo\",\r\n    \"heading\",\r\n    \"banner\",\r\n    \"img\",\r\n    \"checkbox\",\r\n    \"spinbutton\",\r\n    \"radio\",\r\n    \"textbox\",\r\n    \"listitem\",\r\n    \"listgroup\",\r\n  ];\r\n  for (let role of roles) {\r\n    const element = screen.getByRole(role);\r\n    expect(element).toBeInTheDocument();\r\n  }\r\n});\r\n","type":"code","id":"nc7is"},{"content":"const AccessibleName = () => {\r\n  return (\r\n    <div>\r\n      <button>submit</button>\r\n      <button>cancel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<AccessibleName />);\r\n","type":"code","id":"s2bz3"},{"content":"test(\"can select by accessible name\", async () => {\r\n  // render the component\r\n  render(<AccessibleName />);\r\n  const submitButton = screen.getByRole(\"button\", {name: /submit/i});\r\n  const cancelButton = screen.getByRole(\"button\", {name: /cancel/});\r\nexpect(submitButton).toBeInTheDocument();\r\nexpect(cancelButton).toBeInTheDocument();\r\n});","type":"code","id":"r7yar"},{"content":"const MoreNames = () => {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input type=\"text\" id=\"email\" />\r\n      <label htmlFor=\"search\">Search</label>\r\n      <input id=\"search\" type=\"text\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nrender(<MoreNames />);\r\n","type":"code","id":"lvv4d"},{"content":"test(\"shows an email and search input\", async () => {\r\n  // render the component\r\n  render(<MoreNames />);\r\n  const emailInput = screen.getByRole(\"textbox\", { name: /email/i });\r\n  const searchInput = screen.getByRole(\"textbox\", { name: /search/i });\r\n  expect(emailInput).toBeInTheDocument();\r\n  expect(searchInput).toBeInTheDocument();\r\n});\r\n","type":"code","id":"btzmh"}]